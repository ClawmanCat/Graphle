name: Build & Run Tests (Windows)

on:
  push:
    branches: [ "master", "ci" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: false

      matrix:
        build_type: [Debug, Release]
        cxx_compiler: [clang-cl, cl]
        include:
          - cxx_compiler: clang-cl
            cmake_params: "-T ClangCL"
            choco_params: >
              --params "
              --add Microsoft.VisualStudio.Component.VC.Llvm.Clang 
              --add Microsoft.VisualStudio.Component.VC.Llvm.ClangToolset 
              --add Microsoft.VisualStudio.ComponentGroup.NativeDesktop.Llvm.Clang 
              --add Microsoft.VisualStudio.Component.VC.CMake.Project
              "
          - cxx_compiler: cl
            cmake_params: ""
            choco_params: ""

    steps:
    - uses: actions/checkout@v3

    - name: Set reusable strings
      id: strings
      shell: bash
      run: echo "build-output-dir=${{ github.workspace }}/out" >> "$GITHUB_OUTPUT"

    - name: Update / Install Toolchain
      run: |
        choco upgrade visualstudio2022buildtools -y ${{ matrix.choco_params }}
        choco upgrade visualstudio2022-workload-vctools -y
        Start-Process -FilePath "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat" -Wait

    - name: Create output directory
      run: mkdir out

    - name: Configure CMake
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: >
        cmake
        -G "Visual Studio 17 2022"
        ${{ matrix.cmake_params }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_C_COMPILER=${{ matrix.cxx_compiler }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }}
        -DGRAPHLE_TESTS=ON
        ../

    - name: Build
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: cmake --build . --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
